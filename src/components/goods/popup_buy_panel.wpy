<template>
  <CoverPanel :display.sync="display" zIndex="1000000" @tap.user="close"/>
  <!--弹出窗口-->
  <view class="wrap" wx:if="{{display}}" >
    <view class="modal-panel column" >
      <!--标题区域-->
      <view class="sku-title row-center">
        <text class="xxl">{{goods.name}}</text>
        <icon class="close normal" color="gray" @tap="close" />
      </view>
      <!--内容区域-->
      <view class="content-box {{goods.goodsSkuInfo != null && goods.skuProperties.length > 0 || goods.skuProperties.length > 1 ? '' : 'sm-scroll-box'}}">
        <scroll-view class="scroll-box column {{goods.goodsSkuInfo != null && goods.skuProperties.length > 0 || goods.skuProperties.length > 1 ? '' : 'sm-scroll-box'}}" scroll-y>
          <!--规格区域-->
          <view class="sku-list-box column"  wx:if="{{goods.goodsSkuInfo != null}}">
            <view class="row">
              <text class="weak sm mr10">{{skuKey}}:</text>
              <DisplayBadge :goods.sync="goods" />
            </view>
            <view class="sku-item-box row">
              <block  wx:for-item="skuValue"  wx:for="{{sku}}" wx:key="index">
                <view class="sku-item label {{skuSelected == skuValue.sku ? 'primary' : ''}} {{skuValue.max ? 'disabled' : ''}}" @tap="selectSkU({{skuValue}})">
                  {{skuValue.sku}}
                </view>
              </block>
            </view>
          </view>

          <!--多属性区域-->
          <block wx:if="{{goods.skuProperties.length > 0}}">
            <block wx:for="{{properties}}" wx:for-item="property" wx:key="index" wx:for-index="index">
              <view class="sku-list-box column">
                <view class="row">
                  <text class="weak sm mr10">{{property.propertyKey}}：</text>
                  <DisplayBadge :goods.sync="goods" />
                </view>
                <view class="sku-item-box row">
                  <block  wx:for-item="propertyValue"  wx:for="{{property.property}}" wx:key="proIndex" wx:for-index="proIndex">
                    <view class="sku-item label {{proSelected[index] == propertyValue ? 'primary' : ''}}" @tap="selectPro({{propertyValue}}, {{index}})">
                      {{propertyValue}}
                    </view>
                  </block>
                </view>
              </view>
            </block>
          </block>
        </scroll-view>
      </view>
      <!--操作区域-->
      <view class="sku-btn-box row-between">
        <view>
          <text class="major xxl">{{price ? '￥' + price : '请选择'}}</text>
          <text class="cancel ml10" wx:if="{{originalPrice}}">￥{{originalPrice}}</text>
        </view>
        <button class="weui-btn mini-btn" type="primary" size="mini" @tap="confirm">选好了</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import CoverPanel from '../common/cover_panel';
  import Sku from '../../utils/Sku';
  import Tips from '../../utils/Tips';
  import DisplayBadge from './discount_badge';
  import Event from '../../utils/Event';
  import Cart from '../../utils/Cart';
  let skuData;
  export default class SkuSelector extends wepy.component {
    props = {
    };
    data = {
      goods: null,
      skuSelected: null,
      proSelected: [],
      proKey: null,
      price: null,
      originalPrice: null,
      display: false,
      source: null
    };
    cartManager = Cart.create();
    onLoad () {
      // 加一个到购物车的监听
      this.source = this.$root.$wxpage.route;
      Event.listen(Event.GOODS_PANEL_PLUS, this.plus.bind(this), this);
      // 减少一个购物车监听
      Event.listen(Event.GOODS_PANEL_MINUS, this.minus.bind(this), this);
    }
    onUnload () {
      console.info('popup unload');
    }
    plus({goods, goodsSku, source}) {
      if (source != this.source) {
        return;
      }
      // TODO 库存校验
      // 初始化商品对象
      this.goods = goods;
      const hasSku = goods.goodsSkuInfo && (goodsSku == null || goodsSku == '');
      const hasProperty = goods.skuProperties.length > 0;
      if (hasSku) {
        // 有SKU，且没有选择SKU的情况，展现面板
        this.display = true;
      } else if (hasProperty) {
        this.display = true;
        console.info('hasProperty')
      } else {
        // 没有SKU，直接加入购物车
        if (goods.isTips || goods.isTips == null) {
          Tips.success('已加入购物车');
        }
        this.cartManager.plus(goods, goodsSku);
        this.clear();
      }
      this.$apply();
    }
    minus ({goodsId, goodsSku, source}) {
      if (source != this.source) {
        return;
      }
      // 根据商品ID查找购物车
      const cartGoodsList = this.cartManager.findByGoodsId(goodsId);
      if (cartGoodsList.length < 1) {
        console.warn('移除购物车的商品不存在');
        return;
      }
      if (cartGoodsList.length > 1 && (goodsSku == null || goodsSku == '')) {
        Tips.alert('请在购物车操作');
        return;
      }

      // 处理多规格商品，但是购物车只有一个的情况
      const cartGoods = cartGoodsList[0];
      const selText = {
        skuSelected: cartGoods.goodsSku,
        proSelected: cartGoods.skuProperty
      };
      // 购物车对象
      this.cartManager.minus(goodsId, selText);
      this.$apply();
    }
    clear () {
      skuData = null;
      this.skuSelected = null;
      this.proSelected = [];
      this.originalPrice = null;
      this.price = null;
      this.goods = null;
      this.display = false;
    }
    methods = {
      close() {
        this.clear();
      },
      // 选择SKU
      selectSkU(sku) {
        const skuValue = sku.sku;
        if (sku.max) {
          return;
        }
        skuData.select(this.skuKey, skuValue);
        this.skuSelected = skuValue;
        this.price = skuData.detail.price;
        this.originalPrice = skuData.detail.originalPrice;
        this.$apply();
      },
      selectPro (pro, index) {
        this.proSelected[index] = pro;
      },
      async confirm() {
        if (this.goods.goodsSkuInfo != null) {
          if (this.skuSelected == null) {
            Tips.alert('请选择');
            return;
          }
        }
        if (this.goods.skuProperties.length > 0) {
          if (this.proSelected.length < this.goods.skuProperties.length) {
            Tips.alert('请选择');
            return;
          }
        }
        if (this.goods.isTips || this.goods.isTips == null) {
          Tips.success('已加入购物车');
        }
        this.$root.$apply();
        const selected = {
          skuSelected: this.skuSelected,
          proSelected: this.proSelected.length > 0 ? this.proSelected.toString() : null
        };
        this.cartManager.plus(this.goods, selected);
        // 清理残留数据
        this.clear();
      }
    };
    computed = {
      carts() {
        if (this.cartManager == null) {
          return;
        }
        return this.cartManager.export().carts;
      },
      sku() {
        if (this.goods == null || this.carts == null) {
          return;
        }
        skuData = new Sku(this.goods);
        const stocks = skuData.skuStocks;
        stocks.forEach(stock => {
          if (stock.stock == 0) {
            stock.max = true;
            return;
          }
          const cart = this.carts.find(item => item.goodsId == this.goods.id && item.goodsSku == stock.sku);
          if (cart == null) {
            stock.max = false;
          } else {
            stock.max = cart.goodsNum >= stock.stock;
          }
        });
        return stocks;
      },
      skuKey() {
        if (skuData != null && skuData.labels != null && skuData.labels.length > 0) {
          return skuData.labels[0].key;
        }
      },
      properties () {
        if (this.goods == null || this.carts == null) {
          return;
        }
        if (this.goods.skuProperties.length <= 0) return;
        this.goods.skuProperties.forEach(item => {
          item.property = item.propertyValue.split(',');
        });
        return this.goods.skuProperties;
      }
    };
    components = {
      DisplayBadge: DisplayBadge,
      CoverPanel: CoverPanel
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .wrap{
    position: fixed;
    width: 750rpx;
    max-height: 100%;
    top:0;
    left: 0;
    z-index: 1000001;
    .modal-panel{
      position: fixed;
      border-radius: 3px;
      width: 650rpx;
      max-height: 600rpx;
      top: 30%;
      left: 50rpx;
      background-color: #fFF;
      z-index: 1000002;
    }
    .scroll-box,.content-box{
      height: 360rpx;
    }
    .sm-scroll-box{
      height: 200rpx;
    }
  }
  .sku-title{
    min-height: 80rpx;
    padding: 10rpx 30rpx;
    max-width: 550rpx;
    text{text-align: center}
    .close{
      position: absolute;
      top: 20rpx;
      right: 20rpx;
    }
  }
  .sku-list-box{
    padding-left: 30rpx;
    padding-right: 30rpx;
    .sku-item-box{
      flex-wrap: wrap;
      padding-top: 10rpx;
      padding-bottom: 20rpx;

      .sku-item{
        margin-top: 10rpx;
      }
    }
  }
  .sku-btn-box{
    padding: 30rpx;
    border-bottom-left-radius: 3px;
    border-bottom-right-radius: 3px;
    background-color: $color-bg-item;
  }
</style>
