<template>
  <!--TODO 滑出面板可以重构-->
  <view class="goods-buy-panel-cover" @tap="close" wx:if="{{display}}"></view>

  <!--购买面板-->
  <view class="goods-buy-panel-container {{ display ? 'goods-buy-panel-show' : '' }}" >
    <!--信息面板-->
    <view class="buy-panel-info-container">
      <!--商品图-->
      <image class="buy-panel-icon" src="{{sku.isReady && sku.detail.imageUrl ? sku.detail.imageUrl : goods.imageUrl}}" />
      <!--文字 -->
      <view class="buy-panel-title-price">
        <text class="buy-panel-title">{{goods.name}}</text>
        <view class="panel-price-box row" wx:if="{{goods.paymentType === 'bonus'}}">
          <text class="buy-panel-price" wx:if="{{goods.ruleGoodsPrice}}">{{goods.ruleGoodsPrice}}积分</text>
          <text class="buy-panel-price" wx:else>{{sku.isReady ? sku.detail.price : goods.priceLable}}积分</text>
          <text class="cancel ml10" wx:if="{{goods.originalPrice && goods.originalPrice > 0}}">{{goods.originalPrice}}元</text>
          <DiscountBadge :goods.sync="goods" />
        </view>
        <view class="panel-price-box row" wx:else>
          <text class="buy-panel-price" wx:if="{{goods.ruleGoodsPrice}}">￥{{goods.ruleGoodsPrice}}</text>
          <text class="buy-panel-price" wx:else>￥{{sku.isReady ? sku.detail.price : goods.priceLable}}</text>
          <text class="cancel ml10" wx:if="{{goods.originalPrice && goods.originalPrice > 0}}">￥{{goods.originalPrice}}</text>
          <DiscountBadge :goods.sync="goods" />
        </view>
      </view>
      <!--关闭按钮-->
      <view class="buy-panel-close-container">
        <icon class="close" color="gray" @tap="close"/>
      </view>
    </view>

    <!--SKU展示 -->
    <view class="buy-panel-sku-container {{goods.skuProperties.length > 0 ? 'no-border-bottom' : ''}}" wx:if="{{goods.goodsSkuInfo != null}}">
      <view wx:for="{{sku.labels}}" wx:for-item="label" wx:key="key">
        <view class="buy-panel-sku-title">
          <text class="buy-panel-sku-title-text">{{label.key}}：</text>
        </view>
        <view class="buy-panel-sku-list">
          <block wx:for-item="skuValue" wx:for="{{label.value}}" wx:key="*this" >
            <view class="label {{sku.disabledSkuValues[skuValue] ? 'disabled' : '' }} {{sku.selected[label.key] == skuValue ? 'primary' : ''}}"
                  @tap="selectSkU({{label.key}}, {{skuValue}})">{{skuValue}}</view>
          </block>
        </view>
      </view>
    </view>

    <!-- PRO展示 -->
    <view class="buy-panel-sku-container" wx:if="{{goods.skuProperties.length > 0}}">
      <view wx:for="{{properties}}" wx:for-item="property" wx:key="index" wx:for-index="index">
        <view class="buy-panel-sku-title">
          <text class="weak sm mr10">{{property.propertyKey}}：</text>
        </view>
        <view class="buy-panel-sku-list">
          <block  wx:for-item="propertyValue"  wx:for="{{property.property}}" wx:key="proIndex" wx:for-index="proIndex">
            <view class="sku-item label {{proSelected[index] == propertyValue ? 'primary' : ''}}" @tap="selectPro({{propertyValue}}, {{index}})">
              {{propertyValue}}
            </view>
          </block>
        </view>
      </view>
    </view>

    <!--购买数量 -->
    <view class="buy-panel-num-container">
      <view class="buy-panel-num-title">
        <text class="buy-panel-num-text">购买数量：</text>
        <text class="buy-panel-stock-text" >{{sku.stockText}}</text>
      </view>

      <view class="buy-panel-num-selector">
        <ZanQuantity :quantity.sync="quantity" @change.user="num"/>
      </view>
    </view>

    <block wx:if="{{status.open}}">
      <view class="buy-panel-next {{sku.next && goods.skuProperties.length == proSelected.length ? '' : 'buy-panel-empty'}}" @tap="confirm({{action}})">
        <text>{{buttonText}}</text>
      </view>
    </block>
    <block wx:else>
      <view class="buy-panel-next buy-panel-empty" catchtap="onCloseTap" >
        <text>未营业</text>
      </view>
    </block>

  </view>

</template>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base_com';
  import { checkUserInfoWithError } from '../../api/wx_auth';
  import order from '../../api/order';
  import bargain from '../../api/bargain'
  import { connect } from 'wepy-redux';
  import store from '../../store/utils';
  import ZanQuantity from '../../components/zanui/quantity';
  import Sku from '../../utils/Sku';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';
  import Cart from '../../utils/Cart';
  import DiscountBadge from './discount_badge';
  import router from '../../mixins/router'

  @connect({
    orderCount: store.get('orderCount'),
    status: store.get('status'),
    member: store.get('member')
  })
  export default class GoodsPanel extends wepy.component {
    data = {
      goods: null,
      source: null,
      action: 'cart',
      display: false,
      proSelected: [],
      orderType: null
    };
    skuManager = null;
    cartManager = Cart.create();
    async onLoad() {
      this.source = this.$root.$wxpage.route;
      // 监听购物面板打开的事件
      Event.listen(Event.GOODS_PANEL_OPEN, this.open.bind(this), this);
    }
    open({goods, source, action}) {
      console.info(`[slider] open goodId=${goods.id}, listen_source=${this.source} source=${source}, action=${action}`);
      if (source != this.source) {
        return;
      }
      this.goods = goods;
      this.action = action;
      // 构造SKU对象
      this.skuManager = new Sku(goods);
      this.skuManager.action = action;
      this.display = true;
      this.$apply();
    }
    clear () {
      console.info('[SilderPanel] clear');
      this.goods = null;
      this.action = 'cart';
      this.display = false;
      this.proSelected = [];
    }
    methods = {
      // 选择SKU
      selectSkU(key, value) {
        if (this.sku.disabledSkuValues[value]) {
          return;
        }
        this.skuManager.select(key, value);
      },
      // 选择PRO
      selectPro (pro, index) {
        this.proSelected[index] = pro;
      },
      // 关闭SKU
      close() {
        this.clear();
      },
      // 改变SKU数量
      num({quantity}) {
        this.skuManager.setNum(quantity);
      },
      // 确认选择
      async confirm(type) {
        console.info('[slider_panel] type=', type, this.goods);
        await checkUserInfoWithError();
        if (!this.sku.next) {
          return;
        }
        // 增加到购物车
        const {skuText, num} = this.sku;
        const selText = {
          skuSelected: skuText,
          proSelected: this.proSelected.length > 0 ? this.proSelected.toString() : null
        };
        if (type === 'cart') {
          // 购物车购买
          Tips.success('已加入购物车');
          // 关闭面板
          this.display = false;
          this.$apply();
          this.cartManager.plus(this.goods, selText, num);
        } else if (type === 'begin' || type === 'help') {
          // 拼团和砍价
          try {
            Tips.loading();
            const result = await bargain.GoodsBargain(this.goods.ruleId, this.goods.id, this.sku.skuText);
            await Tips.success('砍价成功');
            const isBegin = true;
            this.$root.$redirect(`../bargain/bargain_detail?bargainId=${result.id}&&isBegin=${isBegin}`);
          } catch (err) {
            await Tips.modal(err.message);
            wepy.navigateBack();
          }
        } else {
          // 普通购买
          if (this.goods.limitType == 'NEW_CUSTOMER' && this.orderCount > 0) {
            Tips.modal('该商品仅限新用户首单购买');
            return;
          }
          const cart = this.cartManager.createCart(this.goods, selText, num);
          const trade = order.createCartTrade([cart], {orderType: this.orderType || 10});
          if (type === 'join' || type === 'group') {
            const {groupId, ruleId} = this.goods;
            Object.assign(trade, {ruleId, groupId});
            this.$root.$preload('params', {trade, type});
          } else {
            // 直接购买
            this.$root.$preload('params', {trade, type});
          }
          this.display = false;
          this.$apply();
          if (this.goods.paymentType === 'common') {
            this.$root.$navigate(`/pages/order/trade`);
          } else {
            if (this.member.bonus >= this.goods.priceLable) {
              this.$root.$navigate(`/pages/order/bonusTrade`);
            } else {
              await Tips.modal('积分不足');
              wepy.navigateBack();
            }
          }
        }
        this.clear();
      }
    };
    computed = {
      sku() {
        if (this.skuManager == null) return;
        return this.skuManager.export();
      },
      buttonText() {
        if (this.goods == null || this.sku == null) return;
        if (this.goods.totalStock < 1) {
          return '已售罄';
        } else if (this.action === 'cart') {
          return '加入购物车'
        } else if (this.goods.paymentType === 'bonus') {
          return '立即兑换';
        } else if (this.action === 'buy' || this.action === 'bargain' || this.action === 'digit') {
          return '立即购买';
        } else if (this.action === 'group') {
          return '一键开团';
        } else if (this.action === 'join') {
          return '一键参团';
        } else if (this.action === 'begin') {
          return '发起砍价';
        }
      },
      quantity() {
        if (this.goods == null) return;
        if (this.sku == null) {
          return null;
        } else if (this.action === 'begin' || this.goods.type === 'digit' || this.goods.paymentType === 'bonus') {
          return {
            num: this.sku.num,
            min: 1,
            max: 1
          }
        } else {
          return {
            num: this.sku.num,
            min: 1,
            max: this.sku.stock
          }
        }
      },
      properties () {
        if (this.goods == null) return;
        if (this.goods.skuProperties.length <= 0) return;
        this.goods.skuProperties.forEach(item => {
          item.property = item.propertyValue.split(',');
        });
        return this.goods.skuProperties;
      }
    };
    components = {
      ZanQuantity: ZanQuantity,
      DiscountBadge: DiscountBadge
    };
    mixins = [router, base];
    events = {
      clear() {
        console.info('[SilderPanel] clear');
        this.clear();
      }
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  /*购买面板*/
  .goods-buy-panel-container{
    position: fixed;
    background: #FFF;
    bottom: 0px;
    width: 100%;
    z-index: 1000;
    transform: translateY(150%);
    transition: all 0.4s ease;
  }
  .goods-buy-panel-show{
    transform: translateY(0);
  }

  /*遮罩层*/
  .goods-buy-panel-cover{
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    background-color: black;
    -webkit-filter:opacity(.6);
    z-index: 100;
  }

  /*信息面板*/
  .buy-panel-info-container{
    margin-left: 30rpx;
    border-bottom: 1px solid #E2E2E2;
    display: flex;
    flex-direction: row;
  }

  /*面板图片*/
  .buy-panel-icon{
    position: relative;
    background-color: white;
    top: -20rpx;
    height: 170rpx;
    min-height:170rpx;
    width: 170rpx;
    min-width: 170rpx;
    border-radius: 5px;
    border: 1px solid #E2E2E2;
  }

  /*信息-价格/标题面板*/
  .buy-panel-title-price{
    display: flex;
    flex:1;
    flex-direction: column;
    padding-left: 30rpx;
    padding-top: 28rpx;
    text-overflow: ellipsis;
    word-break:keep-all;/* 不换行 */
    white-space:nowrap;/* 不换行 */
    overflow:hidden;/* 内容超出宽度时隐藏超出部分的内容 */
  }

  /*商品标题*/
  .buy-panel-title{
    font-size: 30rpx;
    text-overflow: ellipsis;
    word-break:keep-all;/* 不换行 */
    white-space:nowrap;/* 不换行 */
    overflow:hidden;/* 内容超出宽度时隐藏超出部分的内容 */
    color:#1F1F1F;
  }
  /*关闭图标*/
  .buy-panel-close-container{
    padding-top: 28rpx;
    width: 100rpx;
    text-align: center;
  }

  /**
  * 商品价格
  */
  .buy-panel-price{
    font-size: 35rpx;
    color:#ff6200;
  }

  /*SKU展示区域*/
  .buy-panel-sku-container{
    display: flex;
    flex-direction: column;
    margin-left: 30rpx;
    padding-top: 25rpx;
    border-bottom: 1px solid #E2E2E2;
  }

  .no-border-bottom{
    border-bottom: none;
  }

  /*SKU列表*/
  .buy-panel-sku-list{
    padding-top: 15rpx;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }
  .buy-panel-sku-list view {
    margin-bottom: 15rpx;
  }

  /*SKU标题容器*/
  .buy-panel-sku-title{

  }

  /*SKU标题文字*/
  .buy-panel-sku-title-text{
    font-size: 30rpx;
    color: #1F1F1F;
  }

  /*购买数量*/
  .buy-panel-num-container{
    display: flex;
    flex-direction:  row;
    justify-content: space-between;
    align-items: center;
    margin-left: 30rpx;
    padding-top: 30rpx;
    padding-bottom: 30rpx;
    padding-right: 30rpx;
  }

  /*购买数量/剩余 容器*/
  .buy-panel-num-title{
    display: flex;
    height: 82rpx;
    justify-content: flex-start;
    flex-direction: column;
  }
  /*购买数量文字*/
  .buy-panel-num-text{
    font-size: 30rpx;
    color: #1F1F1F;
  }
  /*剩余数量文字*/
  .buy-panel-stock-text{
    margin-top: 10rpx;
  }


  /*购买栏底部*/
  .buy-panel-next{
    background-color: $color-primary;
    height: 100rpx;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .buy-panel-next text{
    font-size: 36rpx;
    color: #FFF;
  }

  /*购买栏为空*/
  .buy-panel-empty{
    background-color: #B0B0B0;
  }

  .panel-price-box{
    margin-top: 20rpx;
    align-items: center;
  }

</style>
